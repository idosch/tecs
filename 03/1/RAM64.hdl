// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {

    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel[0]=address[3], sel[1]=address[4], sel[2]=address[5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    
    And(a=a, b=load, out=loada);
    And(a=b, b=load, out=loadb);
    And(a=c, b=load, out=loadc);
    And(a=d, b=load, out=loadd);
    And(a=e, b=load, out=loade);
    And(a=f, b=load, out=loadf);
    And(a=g, b=load, out=loadg);
    And(a=h, b=load, out=loadh);

    RAM8(in=in, load=loada, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outa);
    RAM8(in=in, load=loadb, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outb);
    RAM8(in=in, load=loadc, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outc);
    RAM8(in=in, load=loadd, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outd);
    RAM8(in=in, load=loade, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=oute);
    RAM8(in=in, load=loadf, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outf);
    RAM8(in=in, load=loadg, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outg);
    RAM8(in=in, load=loadh, address[0]=address[0], address[1]=address[1], address[2]=address[2], out=outh);

    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel[0]=address[3], sel[1]=address[4], sel[2]=address[5], out=out);
}
